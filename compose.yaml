services:
  postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=mydatabase'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=myuser'
    ports:
      - '25432:5432'
    profiles:
      - ""
      - "test"
      - "mailhog"

#  billetterie:
##    image: 'registry.fly.io/billetterie:deployment-01JRVD2DCA9K1BA7YE25RCSH6T'
#    image: 'docker.io/library/billetterie:0.0.1-SNAPSHOT'
#    environment:
#      - 'SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/mydatabase?user=myuser&password=secret'
#    ports:
#      - '28080:8080'

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "20080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: com@com.com
      PGADMIN_DEFAULT_PASSWORD: secret
    profiles:
      - ""
      - "mailhog"

  mailhog:
    image: mailhog/mailhog
    ports:
      - "21025:1025"
      - "28025:8025"
    profiles:
      - "mailhog"

  # to use profiles with docker compose: docker compose --profile mailhog up/down
  # or let Spring do the job by using the `local-mail` Spring profile
